name: .NET MAUI CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
        
    - name: Install MAUI workloads
      run: dotnet workload install maui
      
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build solution
      run: dotnet build --no-restore --configuration Release
      
    - name: Run unit tests
      run: dotnet test FoodbookApp.Tests/FoodbookApp.Tests.csproj --no-build --configuration Release --verbosity normal --logger trx --results-directory "TestResults" --collect:"XPlat Code Coverage"
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: TestResults/*.trx
        
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-reports
        path: TestResults/**/coverage.cobertura.xml

  # Opcjonalny job dla weryfikacji buildu MAUI na Windows (je≈õli potrzebujesz)
  build-windows:
    name: Build MAUI (Windows)
    runs-on: windows-latest
    needs: test
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
        
    - name: Install MAUI workloads
      run: dotnet workload install maui
      
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build for Windows
      run: dotnet build FoodbookApp.App/FoodbookApp.App.csproj -f net9.0-windows10.0.19041.0 --configuration Release
